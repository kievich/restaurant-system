@using restaurant_system.Tools
@{
    ViewData["Title"] = "Edit Order";
    var cookName = Model.Order.CookName != "" ? Model.Order.CookName : " - ";
}
<br>
<div class="d-flex justify-content-between">

    <button type="button" class="btn btn-primary" onclick="window.location.href='/Orders'">Back</button>
    <div>
        @if (Model.Order.Status == OrderStatus.Draft && User.IsInRole(UserRoles.Waiter))
        {
            <button type="button" onclick="SetStatus(1)" data-toggle="modal" data-target="#confirm-changestatus" class="btn btn-success">Activate</button>
            <button type="button" data-toggle="modal" data-target="#confirm-deleteorder" class="btn btn-danger">Delete</button>
        }
        @if (Model.Order.Status == OrderStatus.Unassigned && User.IsInRole(UserRoles.Cook))
        {
            <button type="button" onclick="SetStatus(2)" data-toggle="modal" data-target="#confirm-changestatus" class="btn btn-success">Взять в обработку</button>
            <button type="button" onclick="SetStatus(4)" data-toggle="modal" data-target="#confirm-changestatus" class="btn btn-warning">Cancel</button>
        }

        @if (Model.Order.Status == OrderStatus.Assigned && User.IsInRole(UserRoles.Cook))
        {
            <button type="button" onclick="SetStatus(1)" data-toggle="modal" data-target="#confirm-changestatus" class="btn btn-warning">Отказаться</button>
            <button type="button" onclick="SetStatus(3)" data-toggle="modal" data-target="#confirm-changestatus" class="btn btn-success">Заказ готов</button>
            <button type="button" onclick="SetStatus(4)" data-toggle="modal" data-target="#confirm-changestatus" class="btn btn-danger">Отменить</button>
        }
    </div>

</div>
<br>
<h1>
    Заказ
</h1>
<br>
<div class="d-flex justify-content-between shadow-sm p-3 mb-5 bg-white rounded ">
    <h5>Статус: @Model.Order.Status</h5>
    <h5>Стол: @Model.TableName</h5>
    <h5>Повар: @NameHelper.GetNameFromEmail(cookName)</h5>
    <h5>Итоговая стоимость: @Model.TotalPrice</h5>
    <h5> @Model.Order.Date</h5>
</div>
<br>
<br>
@foreach (var item in Model.OrderDishes)
{
    <div class="d-flex justify-content-between shadow-sm p-3 mb-5 bg-white rounded ">
        <div>
            <p> @item.Name</p>
            <p> @item.Description</p>
            <p> Price: @item.Price</p>
        </div>
        @if (Model.Order.Status == OrderStatus.Draft && User.IsInRole(UserRoles.Waiter))
        {
            <div class="d-flex align-items-center">
                @if (@item.Count > 0)
                {
                    <button type="button" onclick="ChangeCount(@item.OrderDishId, @(item.Count - 1))" class="btn btn-primary">-</button>
                }
                <button type="button" class="btn disabled">@item.Count</button>
                <button type="button" onclick="ChangeCount(@item.OrderDishId, @(item.Count + 1))" class="btn btn-primary">+</button>
            </div>
            <div class="d-flex align-items-center">
                <button onclick="SetOrderDishId(@item.OrderDishId)" type="button" data-toggle="modal" data-target="#confirm-OrderDish-delete" class="btn btn-primary">Delete</button>
            </div>
        }
    </div>
}
<br>

<br>
<br>
<h1>
    Dishes
</h1>
<br>
@{
    await Html.RenderPartialAsync("SearchPartial", new { SearchString = ViewBag.DishBag.searchString });
}
<br>
<table class="table table-hover">

    <thead>
        <tr>
            <th scope="col">№</th>
            <th scope="col">Name</th>
            <th scope="col">Description</th>
            <th scope="col">Price</th>
            @if (Model.Order.Status == OrderStatus.Draft && User.IsInRole(UserRoles.Waiter))
            {
                <th scope="col"></th>
            }
        </tr>
    </thead>

    @foreach (var item in Model.Dishes)
    {
        <tbody>
            <tr id="row-@item.Id">
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.Description</td>
                <td>@item.Price</td>
                @if (Model.Order.Status == OrderStatus.Draft && User.IsInRole(UserRoles.Waiter))
                {
                    <td>
                        <button onclick="SetDishId(@item.Id)" type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#confirm-OrderDish">Add</button>
                    </td>
                }

            </tr>
        </tbody>

    }

</table>
@{
    await Html.RenderPartialAsync("PaginationPartial", new { PageCount = ViewBag.DishBag.PageCount, CurrentPage = ViewBag.DishBag.CurrentPage, SearchString = ViewBag.DishBag.searchString });
    await Html.RenderPartialAsync("MessegePartial");
    await Html.RenderPartialAsync("AddOrderDishPartial", new { Prefix = "OrderDish", OrderId = Model.Order.Id });
    await Html.RenderPartialAsync("OrderDishActionsPartial");
    await Html.RenderPartialAsync("OrderActionsPartial", new { OrderId = Model.Order.Id });
}


