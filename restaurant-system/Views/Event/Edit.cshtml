@{
    ViewData["Title"] = "Редактировать";
}
<br>
<div class="d-flex justify-content-between">

    <button type="button" class="btn btn-primary" onclick="window.location.href='/Events'">Назад</button>
    <div>
        <button type="button" data-toggle="modal" data-target="#confirm-deleteevent" class="btn btn-danger">Удалить</button>
    </div>

</div>
<br>
<h1>
    Событие
</h1>
<br>
@{
    await Html.RenderPartialAsync("EventFieldsPartial", new { Event = Model.Event });
}
<br>
<br>
@foreach (var item in Model.CustomerEvents)
{
    <div class="d-flex justify-content-between shadow-sm p-3 mb-5 bg-white rounded ">
        <div>
            <p> @item.Firstname</p>
            <p> @item.Lastname</p>
        </div>

        <div class="d-flex align-items-center">
            <button onclick="SetCustomerId(@item.CustomerEventId)" type="button" data-toggle="modal" data-target="#confirm-CustomerEvent-delete" class="btn btn-primary">Удалить</button>
        </div>

    </div>
}
<br>

<br>
<br>
<h1>
    Customers
</h1>
<br>
@{
    await Html.RenderPartialAsync("SearchPartial", new { SearchString = ViewBag.CustomerBag.searchString });
}
<br>
<table class="table table-hover">


    <thead>
        <tr>
            <th scope="col">№</th>
            <th scope="col">Имя</th>
            <th scope="col">Фамилия</th>
            <th scope="col">Телефон</th>
            <th scope="col"></th>
        </tr>
    </thead>

    @foreach (var item in Model.Customeres)
    {
        <tbody>
            <tr id="row-@item.Id">
                <td>@item.Id</td>
                <td>@item.Firstname</td>
                <td>@item.Lastname</td>
                <td>@item.Phone</td>
                <td>
                    <button onclick="AddCustomerOrder(@item.Id)" type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#confirm-edit">Добавить</button>
                </td>

            </tr>
        </tbody>

    }

</table>
@*@{await Html.RenderPartialAsync("DishesAddPartial");}
    @{await Html.ReRenderPartialAsyncnderPartialAsync("DeleteConfirmPartial", new { Action = "DeleteDish" }); }
    @{await Html.("DishesEditPartial");}*@
@{
    await Html.RenderPartialAsync("PaginationPartial", new { PageCount = ViewBag.CustomerBag.PageCount, CurrentPage = ViewBag.CustomerBag.CurrentPage, SearchString = ViewBag.CustomerBag.searchString });
    await Html.RenderPartialAsync("MessegePartial");
    await Html.RenderPartialAsync("AddCustomerEventPartial", new { EventId = Model.Event.Id });
    await Html.RenderPartialAsync("DeleteCustomerEventPartial", new { EventId = Model.Event.Id });
    await Html.RenderPartialAsync("EventActionsPartial", new { EventId = Model.Event.Id });



}
